#!/usr/bin/python2
# -*- mode: Python; fill-column: 75; comment-column: 50; -*-
#
# (c) iomonad - <clement@trosa.io>
#
# Description: BNF.fr ressource feching script.
# Dependencies:
#  - Python 2.7
#  - mozilla/geckodriver: (LATEST)
#

import os, sys, time
from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By

# Referential url with document variable
scheme = "https://bibliotheques-specialisees.paris.fr/ark:/73873/pf0000855431/{:04d}/v0001.simple"

# Generate target from website logic
def target(page):
    return scheme.format(page)

class Crawler:
    """Generic boilerplate for naive
    crawling directives"""
    def __init__(self, driver, timeout = 5):
        self.driver = driver
        self.timeout = timeout
    def download(self, res):
        assert res >= 1
        self.driver.get(target(res))
        self.driver.find_element(By.XPATH, '//*[@id="hires"]').click()
        self.driver.find_element(By.XPATH, '//*[@id="checkConditions"]').click()
        self.driver.find_element(By.XPATH, '/html/body/div[5]/div[3]/div/button').click()
        time.sleep(self.timeout)
    def compute(self, rate):
        for doc in range(1, rate):
            self.download(doc)
    def __del__(self):
        for i in os.listdir("/tmp"):
            if ".crdownload" in i:
                time.sleep(0.5)
                downloads_done()
            else:
                self.driver.close()

if __name__ == "__main__":
    profile = webdriver.FirefoxProfile()
    profile.set_preference('browser.download.folderList', 2)
    profile.set_preference('browser.download.manager.showWhenStarting', False)
    profile.set_preference('browser.download.dir', '/tmp') # Target
    profile.set_preference('browser.helperApps.neverAsk.saveToDisk', 'application/zip')
    crawler = Crawler(webdriver.Firefox(profile))
    crawler.compute(2)
